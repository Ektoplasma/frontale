#############################################################################
# Makefile for building: laBelleFrontale
# Generated by qmake (2.01a) (Qt 4.8.6) on: lun. déc. 28 13:30:37 2015
# Project:  laBelleFrontale.pro
# Template: app
# Command: /usr/lib/x86_64-linux-gnu/qt4/bin/qmake -o Makefile laBelleFrontale.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -std=c++11 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I. -I/home/helvestrom/boost_1_59_0/
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lQtGui -lQtNetwork -lQtCore -lpthread /usr/local/lib/libboost_system.a /usr/local/lib/libboost_thread.a /usr/local/lib/libboost_date_time.a /usr/local/lib/libboost_regex.a /usr/local/lib/libboost_serialization.a -lssl -lcrypto -lcrypto++
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/x86_64-linux-gnu/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = bdd_tcp.cpp \
		client.cpp \
		emission_tcp.cpp \
		fusionneur.cpp \
		main.cpp \
		message.cpp \
		network_interface.cpp \
		noeudthor.cpp \
		reception.cpp \
		reception_tcp.cpp \
		requete.cpp \
		rsacrypt.cpp \
		timertoken.cpp \
		traitement.cpp \
		utils.cpp \
		../leBeauReseau/Trame/trame.cpp moc_bdd_tcp.cpp \
		moc_emission_tcp.cpp \
		moc_fusionneur.cpp \
		moc_reception.cpp \
		moc_reception_tcp.cpp \
		moc_timertoken.cpp
OBJECTS       = bdd_tcp.o \
		client.o \
		emission_tcp.o \
		fusionneur.o \
		main.o \
		message.o \
		network_interface.o \
		noeudthor.o \
		reception.o \
		reception_tcp.o \
		requete.o \
		rsacrypt.o \
		timertoken.o \
		traitement.o \
		utils.o \
		trame.o \
		moc_bdd_tcp.o \
		moc_emission_tcp.o \
		moc_fusionneur.o \
		moc_reception.o \
		moc_reception_tcp.o \
		moc_timertoken.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		laBelleFrontale.pro
QMAKE_TARGET  = laBelleFrontale
DESTDIR       = 
TARGET        = laBelleFrontale

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: laBelleFrontale.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtNetwork.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile laBelleFrontale.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtNetwork.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile laBelleFrontale.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/laBelleFrontale1.0.0 || $(MKDIR) .tmp/laBelleFrontale1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/laBelleFrontale1.0.0/ && $(COPY_FILE) --parents bdd_tcp.h ../leBeauReseau/Client/client.h clientFront.h emission_tcp.h engine_event.h fusionneur.h message.h network_interface.h noeudthor.h reception.h reception_tcp.h requete.h rsacrypt.h timertoken.h traitement.h ../leBeauReseau/Trame/trame.h utils.h .tmp/laBelleFrontale1.0.0/ && $(COPY_FILE) --parents bdd_tcp.cpp client.cpp emission_tcp.cpp fusionneur.cpp main.cpp message.cpp network_interface.cpp noeudthor.cpp reception.cpp reception_tcp.cpp requete.cpp rsacrypt.cpp timertoken.cpp traitement.cpp utils.cpp ../leBeauReseau/Trame/trame.cpp .tmp/laBelleFrontale1.0.0/ && (cd `dirname .tmp/laBelleFrontale1.0.0` && $(TAR) laBelleFrontale1.0.0.tar laBelleFrontale1.0.0 && $(COMPRESS) laBelleFrontale1.0.0.tar) && $(MOVE) `dirname .tmp/laBelleFrontale1.0.0`/laBelleFrontale1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/laBelleFrontale1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_bdd_tcp.cpp moc_emission_tcp.cpp moc_fusionneur.cpp moc_reception.cpp moc_reception_tcp.cpp moc_timertoken.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_bdd_tcp.cpp moc_emission_tcp.cpp moc_fusionneur.cpp moc_reception.cpp moc_reception_tcp.cpp moc_timertoken.cpp
moc_bdd_tcp.cpp: bdd_tcp.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) bdd_tcp.h -o moc_bdd_tcp.cpp

moc_emission_tcp.cpp: emission_tcp.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) emission_tcp.h -o moc_emission_tcp.cpp

moc_fusionneur.cpp: timertoken.h \
		fusionneur.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) fusionneur.h -o moc_fusionneur.cpp

moc_reception.cpp: reception.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) reception.h -o moc_reception.cpp

moc_reception_tcp.cpp: reception_tcp.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) reception_tcp.h -o moc_reception_tcp.cpp

moc_timertoken.cpp: timertoken.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) timertoken.h -o moc_timertoken.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

bdd_tcp.o: bdd_tcp.cpp bdd_tcp.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bdd_tcp.o bdd_tcp.cpp

client.o: client.cpp clientFront.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o client.o client.cpp

emission_tcp.o: emission_tcp.cpp emission_tcp.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o emission_tcp.o emission_tcp.cpp

fusionneur.o: fusionneur.cpp traitement.h \
		fusionneur.h \
		timertoken.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fusionneur.o fusionneur.cpp

main.o: main.cpp message.h \
		requete.h \
		engine_event.h \
		network_interface.h \
		noeudthor.h \
		../leBeauReseau/Client/client.h \
		trame.h \
		bdd_tcp.h \
		reception.h \
		clientFront.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

message.o: message.cpp message.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o message.o message.cpp

network_interface.o: network_interface.cpp clientFront.h \
		reception.h \
		network_interface.h \
		engine_event.h \
		noeudthor.h \
		../leBeauReseau/Client/client.h \
		trame.h \
		bdd_tcp.h \
		utils.h \
		traitement.h \
		message.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o network_interface.o network_interface.cpp

noeudthor.o: noeudthor.cpp noeudthor.h \
		../leBeauReseau/Client/client.h \
		trame.h \
		network_interface.h \
		engine_event.h \
		bdd_tcp.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o noeudthor.o noeudthor.cpp

reception.o: reception.cpp reception.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o reception.o reception.cpp

reception_tcp.o: reception_tcp.cpp reception_tcp.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o reception_tcp.o reception_tcp.cpp

requete.o: requete.cpp requete.h \
		traitement.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o requete.o requete.cpp

rsacrypt.o: rsacrypt.cpp rsacrypt.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o rsacrypt.o rsacrypt.cpp

timertoken.o: timertoken.cpp timertoken.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o timertoken.o timertoken.cpp

traitement.o: traitement.cpp traitement.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o traitement.o traitement.cpp

utils.o: utils.cpp utils.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o utils.o utils.cpp

trame.o: ../leBeauReseau/Trame/trame.cpp trame.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o trame.o ../leBeauReseau/Trame/trame.cpp

moc_bdd_tcp.o: moc_bdd_tcp.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_bdd_tcp.o moc_bdd_tcp.cpp

moc_emission_tcp.o: moc_emission_tcp.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_emission_tcp.o moc_emission_tcp.cpp

moc_fusionneur.o: moc_fusionneur.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_fusionneur.o moc_fusionneur.cpp

moc_reception.o: moc_reception.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_reception.o moc_reception.cpp

moc_reception_tcp.o: moc_reception_tcp.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_reception_tcp.o moc_reception_tcp.cpp

moc_timertoken.o: moc_timertoken.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_timertoken.o moc_timertoken.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

